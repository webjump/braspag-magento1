<?php //[STAMP] 6c880b6ba4597952932d6197b28343f8

// This class was automatically generated by build task
// You should not change it manually as it will be overwritten on next build
// @codingStandardsIgnoreFile


use Codeception\Module\Asserts;
use Codeception\Module\UnitHelper;
use Codeception\Module\Mockery;

/**
 * Inherited Methods
 * @method void wantToTest($text)
 * @method void wantTo($text)
 * @method void execute($callable)
 * @method void expectTo($prediction)
 * @method void expect($prediction)
 * @method void amGoingTo($argumentation)
 * @method void am($role)
 * @method void lookForwardTo($achieveValue)
 * @method void comment($description)
 * @method void haveFriend($name, $actorClass = null)
 *
 * @SuppressWarnings(PHPMD)
*/
class UnitTester extends \Codeception\Actor
{
   
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Checks that two variables are equal.
     *
     * @param        $expected
     * @param        $actual
     * @param string $message
     *
     * @return mixed
     * @see \Codeception\Module\Asserts::assertEquals()
     */
    public function assertEquals($expected, $actual, $message = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('assertEquals', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Checks that two variables are not equal
     *
     * @param        $expected
     * @param        $actual
     * @param string $message
     * @see \Codeception\Module\Asserts::assertNotEquals()
     */
    public function assertNotEquals($expected, $actual, $message = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('assertNotEquals', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Checks that two variables are same
     *
     * @param        $expected
     * @param        $actual
     * @param string $message
     *
     * @return mixed
     * @see \Codeception\Module\Asserts::assertSame()
     */
    public function assertSame($expected, $actual, $message = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('assertSame', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Checks that two variables are not same
     *
     * @param        $expected
     * @param        $actual
     * @param string $message
     * @see \Codeception\Module\Asserts::assertNotSame()
     */
    public function assertNotSame($expected, $actual, $message = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('assertNotSame', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Checks that expected is greater than actual
     *
     * @param        $expected
     * @param        $actual
     * @param string $message
     * @see \Codeception\Module\Asserts::assertGreaterThan()
     */
    public function assertGreaterThan($expected, $actual, $message = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('assertGreaterThan', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * @deprecated
     * @see \Codeception\Module\Asserts::assertGreaterThen()
     */
    public function assertGreaterThen($expected, $actual, $message = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('assertGreaterThen', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Checks that expected is greater or equal than actual
     *
     * @param        $expected
     * @param        $actual
     * @param string $message
     * @see \Codeception\Module\Asserts::assertGreaterThanOrEqual()
     */
    public function assertGreaterThanOrEqual($expected, $actual, $message = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('assertGreaterThanOrEqual', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * @deprecated
     * @see \Codeception\Module\Asserts::assertGreaterThenOrEqual()
     */
    public function assertGreaterThenOrEqual($expected, $actual, $message = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('assertGreaterThenOrEqual', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Checks that expected is less than actual
     *
     * @param        $expected
     * @param        $actual
     * @param string $message
     * @see \Codeception\Module\Asserts::assertLessThan()
     */
    public function assertLessThan($expected, $actual, $message = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('assertLessThan', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Checks that expected is less or equal than actual
     *
     * @param        $expected
     * @param        $actual
     * @param string $message
     * @see \Codeception\Module\Asserts::assertLessThanOrEqual()
     */
    public function assertLessThanOrEqual($expected, $actual, $message = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('assertLessThanOrEqual', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Checks that haystack contains needle
     *
     * @param        $needle
     * @param        $haystack
     * @param string $message
     * @see \Codeception\Module\Asserts::assertContains()
     */
    public function assertContains($needle, $haystack, $message = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('assertContains', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Checks that haystack doesn't contain needle.
     *
     * @param        $needle
     * @param        $haystack
     * @param string $message
     * @see \Codeception\Module\Asserts::assertNotContains()
     */
    public function assertNotContains($needle, $haystack, $message = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('assertNotContains', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Checks that variable is empty.
     *
     * @param        $actual
     * @param string $message
     * @see \Codeception\Module\Asserts::assertEmpty()
     */
    public function assertEmpty($actual, $message = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('assertEmpty', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Checks that variable is not empty.
     *
     * @param        $actual
     * @param string $message
     * @see \Codeception\Module\Asserts::assertNotEmpty()
     */
    public function assertNotEmpty($actual, $message = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('assertNotEmpty', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Checks that variable is NULL
     *
     * @param        $actual
     * @param string $message
     * @see \Codeception\Module\Asserts::assertNull()
     */
    public function assertNull($actual, $message = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('assertNull', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Checks that variable is not NULL
     *
     * @param        $actual
     * @param string $message
     * @see \Codeception\Module\Asserts::assertNotNull()
     */
    public function assertNotNull($actual, $message = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('assertNotNull', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Checks that condition is positive.
     *
     * @param        $condition
     * @param string $message
     * @see \Codeception\Module\Asserts::assertTrue()
     */
    public function assertTrue($condition, $message = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('assertTrue', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Checks that condition is negative.
     *
     * @param        $condition
     * @param string $message
     * @see \Codeception\Module\Asserts::assertFalse()
     */
    public function assertFalse($condition, $message = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('assertFalse', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Fails the test with message.
     *
     * @param $message
     * @see \Codeception\Module\Asserts::fail()
     */
    public function fail($message) {
        return $this->scenario->runStep(new \Codeception\Step\Action('fail', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getServiceManager()
     */
    public function getServiceManager() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getServiceManager', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeServiceManageConfig()
     */
    public function getFakeServiceManageConfig() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeServiceManageConfig', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeAddress()
     */
    public function getFakeAddress() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeAddress', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeOrder()
     */
    public function getFakeOrder() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeOrder', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeOrderWithoutBraspagOrderId()
     */
    public function getFakeOrderWithoutBraspagOrderId() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeOrderWithoutBraspagOrderId', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakePaymentsList()
     */
    public function getFakePaymentsList() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakePaymentsList', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakePaymentsListWithOneValidCreditCards()
     */
    public function getFakePaymentsListWithOneValidCreditCards() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakePaymentsListWithOneValidCreditCards', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakePaymentsListWithTwoValidCreditCards()
     */
    public function getFakePaymentsListWithTwoValidCreditCards() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakePaymentsListWithTwoValidCreditCards', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakePaymentsListWithOneValidDebitCard()
     */
    public function getFakePaymentsListWithOneValidDebitCard() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakePaymentsListWithOneValidDebitCard', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakePaymentsLisWithBoletoValid()
     */
    public function getFakePaymentsLisWithBoletoValid() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakePaymentsLisWithBoletoValid', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakePaymentsListWithOneValidCreditCardAndBoleto()
     */
    public function getFakePaymentsListWithOneValidCreditCardAndBoleto() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakePaymentsListWithOneValidCreditCardAndBoleto', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakePaymentsListWithOneValidsavedJustClickCreditCard()
     */
    public function getFakePaymentsListWithOneValidsavedJustClickCreditCard() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakePaymentsListWithOneValidsavedJustClickCreditCard', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeDebitCardValid()
     */
    public function getFakeDebitCardValid() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeDebitCardValid', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeBoletoValid()
     */
    public function getFakeBoletoValid() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeBoletoValid', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeCreditCard()
     */
    public function getFakeCreditCard() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeCreditCard', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeCreditCardValid1()
     */
    public function getFakeCreditCardValid1() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeCreditCardValid1', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeCreditCardValid2()
     */
    public function getFakeCreditCardValid2() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeCreditCardValid2', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeSavedJustClickCreditCardValid1()
     */
    public function getFakeSavedJustClickCreditCardValid1() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeSavedJustClickCreditCardValid1', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeTransactionsList()
     */
    public function getFakeTransactionsList() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeTransactionsList', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeTransactionResponse()
     */
    public function getFakeTransactionResponse() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeTransactionResponse', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeTransactionsRequestList()
     */
    public function getFakeTransactionsRequestList() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeTransactionsRequestList', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeTransactionRequest()
     */
    public function getFakeTransactionRequest() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeTransactionRequest', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeCustomer()
     */
    public function getFakeCustomer() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeCustomer', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeCustomerWithoutAddress()
     */
    public function getFakeCustomerWithoutAddress() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeCustomerWithoutAddress', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeRequest()
     */
    public function getFakeRequest() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeRequest', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeCaptureRequest()
     */
    public function getFakeCaptureRequest($braspagId) {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeCaptureRequest', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeRequestData()
     */
    public function getFakeRequestData() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeRequestData', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeResponseData()
     */
    public function getFakeResponseData() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeResponseData', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeResponse()
     */
    public function getFakeResponse() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeResponse', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeTransaction()
     */
    public function getFakeTransaction() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeTransaction', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getValidTemplateXml()
     */
    public function getValidTemplateXml() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getValidTemplateXml', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeCreditCardResponse()
     */
    public function getFakeCreditCardResponse() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeCreditCardResponse', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeErrorReport()
     */
    public function getFakeErrorReport() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeErrorReport', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeErrorReportEmpty()
     */
    public function getFakeErrorReportEmpty() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeErrorReportEmpty', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeOrderResponse()
     */
    public function getFakeOrderResponse() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeOrderResponse', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeOrderResponseEmpty()
     */
    public function getFakeOrderResponseEmpty() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeOrderResponseEmpty', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakePaymentResponse()
     */
    public function getFakePaymentResponse() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakePaymentResponse', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakePaymentsListResponse()
     */
    public function getFakePaymentsListResponse() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakePaymentsListResponse', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakePaymentsListResponseEmpty()
     */
    public function getFakePaymentsListResponseEmpty() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakePaymentsListResponseEmpty', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getOrderFake()
     */
    public function getOrderFake() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getOrderFake', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getOrderPaymentFakeCc()
     */
    public function getOrderPaymentFakeCc() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getOrderPaymentFakeCc', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getCustomerFake()
     */
    public function getCustomerFake() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getCustomerFake', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getQuoteFake()
     */
    public function getQuoteFake() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getQuoteFake', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakePaymentOrder()
     */
    public function getFakePaymentOrder() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakePaymentOrder', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::isGuid()
     */
    public function isGuid($guid) {
        return $this->scenario->runStep(new \Codeception\Step\Action('isGuid', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeAuthorizeResponseXml()
     */
    public function getFakeAuthorizeResponseXml() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeAuthorizeResponseXml', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getFakeAuthorizeResponseXmlWithErrors()
     */
    public function getFakeAuthorizeResponseXmlWithErrors() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getFakeAuthorizeResponseXmlWithErrors', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getMageFakeOrder()
     */
    public function getMageFakeOrder() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getMageFakeOrder', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::validateDate()
     */
    public function validateDate($date) {
        return $this->scenario->runStep(new \Codeception\Step\Action('validateDate', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::getTomorrowDate()
     */
    public function getTomorrowDate() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getTomorrowDate', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\UnitHelper::replaceModelByMock()
     */
    public function replaceModelByMock($name, $mock) {
        return $this->scenario->runStep(new \Codeception\Step\Action('replaceModelByMock', func_get_args()));
    }
}
